<?php	defined( '_JEXEC' ) or die( 'Restricted access' );     	jimport("joomla.plugin.plugin");				class plgSystemLagcartuload extends JPlugin{				public $session;		public $inputCookie;		public $input;		public $sessionId;		public $db;		public $debugging;		public $user_agent_info;		public $uMessage = 0;				public function __construct(& $subject, $config){			parent::__construct($subject, $config);				 			$this->inputCookie  = JFactory::getApplication()->input->cookie;			$this->input        = JFactory::getApplication()->input;			$this->db           = JFactory::getDbo(); 			$this->debugging    = $this->params->get('lagcartuload_plugin_debugging',0);			$this->user_agent_info = $_SERVER["HTTP_USER_AGENT"];		}				public function onAfterRoute(){		    if (JFactory::getApplication()->isAdmin()) {				return NULL;			}			 			if (!class_exists( 'VmConfig' )) {			    if(file_exists(JPATH_ADMINISTRATOR . DS . 'components' . DS . 'com_virtuemart'.DS.'helpers'.DS.'config.php')){			        require_once(JPATH_ADMINISTRATOR . DS . 'components' . DS . 'com_virtuemart'.DS.'helpers'.DS.'config.php');						VmConfig::loadConfig();					VmConfig::loadJLang('com_virtuemart', true);				}else{				    return NULL;				}			}						$session = JFactory::getSession(); 			$user = JFactory::getUser();						//Получаем ID пользователя			$userid = (int)$user->get("id");				if(!empty($this->debugging)){	    	    JFactory::getApplication()->enqueueMessage('<div style="display:none;">'.rand(0, 1500).'</div><b>onAfterRoute текущее значение $userid= '.$userid.'</b>');		   	} 			//получаем данные virtuemart корзины из сессии для проверки пустая она или нет			$cartSession = $session->get("vmcart", 0, "vm");			 			//получаем COOKIE cookcartusave из браузера			$cookcartusave = $this->inputCookie->get('cookcartusave', $defaultValue = null);			if(!empty($this->debugging)){	    			if(!empty($cookcartusave)){	    		    JFactory::getApplication()->enqueueMessage('<b><div style="display:none;">'.rand(0, 1500).'</div>onAfterRoute текущее значение cookcartusave для корзины</b>  '.$cookcartusave);			 		    	}else{    			    JFactory::getApplication()->enqueueMessage('<div style="display:none;">'.rand(0, 1500).'</div>onAfterRoute cookcartusave ПУСТОЙ');		    		}			}						if(!empty($this->debugging)){			    $quserid ='';			    			    $q = "SELECT * FROM #__lagcartusave WHERE session_id = " . $this->db->Quote($cookcartusave)." ".$quserid;		            $this->db->setQuery($q);    	        $result = $this->db->loadObject();				if(!$result){				    if(!empty($userid)){				        $q = "SELECT * FROM #__lagcartusave WHERE userid = ".$userid;		                    $this->db->setQuery($q);    	                $result = $this->db->loadObject();		    		}				    				}				if($result){				    $cartProductsDataRes = (array)(json_decode($result->vmcart)->cartProductsData);					$cartProductsDataResArr=array();					 					foreach ($cartProductsDataRes as $key => $value){					    $product = VmModel::getModel('product')->getProduct($value->virtuemart_product_id);					    $cartProductsDataResArr[] = '<div style="border:1px solid green;">product_name - '.$product->product_name. '<br>virtuemart_product_id - '.$value->virtuemart_product_id.'<br>quantity - '.$value->quantity.'</div><br>';					}									    JFactory::getApplication()->enqueueMessage('<b><div style="display:none;">'.rand(0, 1500).'</div>onAfterRoute в БД есть запись</b><div style="margin:0 0 0 40px;padding:5px;border:1px solid green;"><table><tbody>					<tr><td>id</td><td>'.$result->id.'</td></tr>					<tr><td>created</td><td>'.$result->created.'</td></tr>					<tr><td>vmcart->cartProductsData</td><td>'.implode("", $cartProductsDataResArr).'</td></tr>					<tr><td>userip</td><td>'.$result->userip.'</td></tr>					<tr><td>session_id</td><td>'.$result->session_id.'</td></tr>					<tr><td>userid</td><td>'.$result->userid.'</td></tr>					<tr><td>lifecookcart</td><td>'.$result->lifecookcart.'</td></tr>					<tr><td>user_agent_info</td><td>'.$result->user_agent_info.'</td></tr>						</tbody></table></div>');				}else{				    if(!empty($this->debugging)){						            JFactory::getApplication()->enqueueMessage('<b><div style="display:none;">'.rand(0, 1500).'</div>onAfterRoute в БД НЕТ записи</b>');									        }				}	    		JFactory::getApplication()->enqueueMessage('<br>');			 		   	}						//Проверяем пустая или нет корзина			if(!empty($this->debugging)){						    JFactory::getApplication()->enqueueMessage('<b><div style="display:none;">'.rand(0, 1500).'</div>onAfterRoute 1 Проверяем пустая или нет корзина</b>');			}			if(empty(json_decode($cartSession)->cartProductsData)){			    //корзина пустая				if(!empty($this->debugging)){						        JFactory::getApplication()->enqueueMessage('<b><div style="display:none;">'.rand(0, 1500).'</div>onAfterRoute 2 корзина ПУСТАЯ <br> onAfterRoute 3 проверяем это юзер или это гость</b>');									    }			    //проверяем это юзер или это гость								if(empty($userid)){				    			    	//это гость					if(!empty($this->debugging)){						            JFactory::getApplication()->enqueueMessage('<b><div style="display:none;">'.rand(0, 1500).'</div>onAfterRoute 4 это гость<br>onAfterRoute 5 проверяем есть куки в памяти браузера гостя</b>');				    	    }				    //проверяем есть куки в памяти браузера гостя										if(!empty($cookcartusave)){					    if(!empty($this->debugging)){						                JFactory::getApplication()->enqueueMessage('<b><div style="display:none;">'.rand(0, 1500).'</div>onAfterRoute 6 куки в памяти браузера гостя ЕСТЬ '.$cookcartusave.'<br>onAfterRoute 7 проверяем есть ли запись в БД по $cookcartusave SELECT * FROM #__lagcartusave WHERE  session_id = '.$this->db->Quote($cookcartusave).'</b>');								    	        }					    //проверяем есть ли запись в БД по $cookcartusave		             		    	$q = "SELECT * FROM #__lagcartusave WHERE  session_id = " . $this->db->Quote($cookcartusave);				           		        $this->db->setQuery($q);        		        $result = $this->db->loadObject();				        				if($result){						    if(!empty($this->debugging)){						                    JFactory::getApplication()->enqueueMessage('<b><div style="display:none;">'.rand(0, 1500).'</div>onAfterRoute 8 запись с текущим куки '.$cookcartusave.' в БД есть устанавливаем корзину this->setCart</b>');		    	            }						    //запись с текущим куки в БД есть устанавливаем корзину    					    $this->setCart($result);							    					}else{						    if(!empty($this->debugging)){						                    JFactory::getApplication()->enqueueMessage('<b><div style="display:none;">'.rand(0, 1500).'</div>onAfterRoute 9 запись с текущим куки '.$cookcartusave.' в БД НЕТ</b>');		    	            }						}					}else{					    if(!empty($this->debugging)){					                    JFactory::getApplication()->enqueueMessage('<b><div style="display:none;">'.rand(0, 1500).'</div>onAfterRoute 10 куки в памяти браузера гостя НЕТ</b>');    			        }					}					    		    }else{					    //пользователь существует НЕ гость								        if(!empty($this->debugging)){				    		        JFactory::getApplication()->enqueueMessage('<b><div style="display:none;">'.rand(0, 1500).'</div>onAfterRoute 11 пользователь существует НЕ гость '.$userid.'<br>onAfterRoute 12 корзина пустая выполняем функцию поиска в БД записи о корзине по $userid	 или $cookcartusave	 и ее внесение в сессию если есть такая запись.</b>');							        		}					//корзина пустая выполняем функцию поиска в БД записи о корзине по $userid				    	    	    	    	$q = "SELECT * FROM #__lagcartusave WHERE  userid = ".$userid;					    	        $this->db->setQuery($q);	    	        $result = $this->db->loadObject();					    			if($result){	    			    //объект в БД есть 												if(!empty($this->debugging)){				    		            JFactory::getApplication()->enqueueMessage('<b><div style="display:none;">'.rand(0, 1500).'</div>onAfterRoute 13 объект в БД есть '.$result->session_id.'</b>');							        		    }							 						if(!empty($this->debugging)){						                JFactory::getApplication()->enqueueMessage('<b><div style="display:none;">'.rand(0, 1500).'</div>onAfterRoute 15 устанавливаем его в сессию магазина, записываем данные корзины в БД virtuemart для данного Авторизованного USER, переписываем текущее значение куки на значение из старой записи</b>');				            }												//устанавливаем его в сессию магазина	    				$this->setCart($result);						//записываем данные корзины в БД virtuemart для данного Авторизованного USER						$this->storeCartVm();	    				//переписываем текущее значение куки на значение из старой записи						$this->writeCookie($result->session_id,$result->lifecookcart);							    			}else{					    if(!empty($this->debugging)){				    		            JFactory::getApplication()->enqueueMessage('<b><div style="display:none;">'.rand(0, 1500).'</div>onAfterRoute 16 объекта в БД НЕТ для  SELECT * FROM #__lagcartusave WHERE  userid = '.$userid.' OR session_id = ' . $this->db->Quote($cookcartusave).'</b>');							        		    }					}						        	}							}else{			    if(!empty($this->debugging)){				               JFactory::getApplication()->enqueueMessage('<b><div style="display:none;">'.rand(0, 1500).'</div>onAfterRoute 17 Корзина НЕ пустая</b>');							            }				}			/* 			//этот код нужен был чтобы ставить выполнение плагина самым первым в противном случае компонент OPC со своим плагином выполнялся первым и переписывал сессию корзины и корзину в пустое значение, но после правки и добавления строки $cart = VirtueMartCart::getCart(true)->loadCart(json_decode($result->vmcart));   в плагин при добавлении в сессию, данные записывались и в корзину и значение порядка выполнения пагина пропало, код закомментил			//получаем текущее значение сортировки нашего плагина и его id						$q = 'select extension_id , ordering from `#__extensions` where name="lagcartuload" AND type="plugin" AND element="lagcartuload" AND folder="system" LIMIT 1'; 	        $this->db->setQuery($q); 	        $ordering = $this->db->loadObjectList();			$this->db->execute();			 			$pligin_id = $ordering[0]->extension_id;			$ordering_pligin =$ordering[0]->ordering;						//получаем из БД максимальное значение в поле сортировки расширений #__extensions, чтобы далее уствновить нашему плагину значение сортировки больше и он загружался самым первым и устанавливал в сессию значение корзины									$q = 'select min(ordering) from `#__extensions` where extension_id !='.$pligin_id.'  LIMIT 1'; 	        $this->db->setQuery($q); 	        $min_ordering = (int)$this->db->loadResult(); 			$this->db->execute();			 						 			if(!empty($pligin_id)){						    $lagcartuload_plugin_order = trim (preg_replace('/\s/', '', $this->params->get('lagcartuload_plugin_order',"")));				//print_r($lagcartuload_plugin_order);			    if($lagcartuload_plugin_order == "" ){ 					    if($ordering_pligin >= $min_ordering){    				    //print_r("lagcartuload_plugin_order ==  " . $lagcartuload_plugin_order);        				$ordering = -1*(abs($min_ordering) + 1);    	    			//обновляем значеие в поле сортировки плагина                         $q = 'update #__extensions set `ordering` = '.(int)$ordering.' where `extension_id` = '.(int)$pligin_id;    		            $this->db->setQuery($q); 						//Выполним запрос    			        $this->db->query();	                        $this->db->execute();					}				}else {				    if(is_numeric($lagcartuload_plugin_order)){					    if($ordering_pligin != $lagcartuload_plugin_order){    					    //print_r("is_int( lagcartuload_plugin_order  " . $lagcartuload_plugin_order);        				    $q = 'update #__extensions set `ordering` = '.(int)$lagcartuload_plugin_order.' where `extension_id` = '.(int)$pligin_id;            		        $this->db->setQuery($q); 							//Выполним запрос    			            $this->db->query();                            $this->db->execute();						}				    }				}						}			*/ 			//удаляем из БД записи, у которых срок жизни в днях, указанныый в поле lifecookcart истек 			$this->db->setQuery("DELETE FROM #__lagcartusave WHERE created < DATE_SUB(NOW(), INTERVAL lifecookcart DAY)");			//Выполним запрос    		$this->db->query();			$this->db->execute();					}					public function setCart($result){							//если запись есть			if($result) {				     				//если внутри массива объекты есть то записываем в сессию корзины из БД								if(!empty(((object)json_decode($result->vmcart,true))->cartProductsData)){						    if(!empty($this->debugging)){					                JFactory::getApplication()->enqueueMessage('<b><div style="display:none;">'.rand(0, 1500).'</div>onAfterRoute 17 setCart внутри массива объекты есть записываем в сессию корзины из БД</b>');			        }				    $session = JFactory::getSession();		            $session->set('vmcart', $result->vmcart, 'vm');	//записываем в сессию корзины из БД					 					$cart = VirtueMartCart::getCart(true);//получаем корзину									}else{				    //в данных записи массив товаров отсутствует , удаляем данную запись из БД и из КУКИ браузера пользователя				    				    $this->db->setQuery("DELETE FROM #__lagcartusave WHERE (session_id=" . $this->db->Quote($result->session_id)." OR userid = ".$result->userid.") AND userid > 0");		            $this->db->query();						//удаляем данный куки из браузера пользователя					$expire = time() - 1;						$inputCookie  = JFactory::getApplication()->input->cookie;                    $inputCookie ->set('cookcartusave', null, $expire, '/');				}							}else{			    			}				}				//запись корзины в БД virtuemart где он хранит данные незаконченных заказов вошедших пользователей		public function storeCartVm( ){			    	    	$cart = VirtueMartCart::getCart();			$cart->storeCart();		}				public function getIp(){            if (!empty($_SERVER['HTTP_CLIENT_IP'])) {                 $ip = $_SERVER['HTTP_CLIENT_IP'];            } elseif (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])) {                $ip = $_SERVER['HTTP_X_FORWARDED_FOR'];            } elseif (!empty($_SERVER['REMOTE_ADDR'])) {                $ip = $_SERVER['REMOTE_ADDR'];            } else {                $ip = null;            }            return $ip;        }				function writeCookie ($cookcartusave,$lifecookcart){		    //записываем в куки сессию корзины    		$expire = time() + 60 * 60 * 24 * $lifecookcart;	    		$this->inputCookie->set('cookcartusave', $cookcartusave, $expire, '/');		}				//функция поключения необходимых библиотек virtuemart		function includeVmFiles(){		     		    if (!class_exists( 'VmConfig' )) {			    if(file_exists(JPATH_ADMINISTRATOR . DS . 'components' . DS . 'com_virtuemart'.DS.'helpers'.DS.'config.php')){			        require_once(JPATH_ADMINISTRATOR . DS . 'components' . DS . 'com_virtuemart'.DS.'helpers'.DS.'config.php');									}  			}		   	VmConfig::loadConfig();			if(!class_exists('VmModel')) {			    				if(file_exists(VMPATH_ADMIN .'/helpers/vmmodel.php')){			        require_once(VMPATH_ADMIN .'/helpers/vmmodel.php');									}  			}	    	VmConfig::loadJLang('com_virtuemart', true);		    if(!class_exists('VirtueMartCart')) {			    				if(file_exists(JPATH_VM_SITE.DS.'helpers'.DS.'cart.php')){			        require_once(JPATH_VM_SITE.DS.'helpers'.DS.'cart.php');									} 			}			if (!class_exists("shopFunctionsF")) {								if(file_exists(JPATH_VM_SITE . "/helpers/shopfunctionsf.php")){			        require_once(JPATH_VM_SITE . "/helpers/shopfunctionsf.php");									} 			}		    if (!class_exists('CurrencyDisplay')) {			    				if(file_exists(JPATH_ADMINISTRATOR . DS . 'components' . DS . 'com_virtuemart' . DS . 'helpers' . DS . 'currencydisplay.php')){			        require_once(JPATH_ADMINISTRATOR . DS . 'components' . DS . 'com_virtuemart' . DS . 'helpers' . DS . 'currencydisplay.php');									} 			}			 		}			}?>