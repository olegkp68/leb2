<?php	defined( '_JEXEC' ) or die( 'Restricted access' );	    if (!class_exists('vmCustomPlugin')) require(JPATH_VM_PLUGINS . DS . 'vmcustomplugin.php');    if (!class_exists('vmPSPlugin'))     require(JPATH_VM_PLUGINS . DS . 'vmpsplugin.php');    	class plgVmPaymentLagcartusave extends vmPSPlugin{					public $session;		public $inputCookie;		public $input;		public $sessionId;		public $db;		public $lifecookcart;		public $user_agent_info; 		public $debugging;				public function __construct(& $subject, $config){			parent::__construct($subject, $config);				$this->session         = JFactory::getSession();			$this->inputCookie     = JFactory::getApplication()->input->cookie;			$this->input           = JFactory::getApplication()->input;			$this->sessionId       = $this->session->getId();			$this->db              = JFactory::getDBO();			$this->lifecookcart    = trim (preg_replace('/\s/', '', $this->params->get('lagcartusave_plugin_lifecookcart',10)));			$this->user_agent_info = $_SERVER["HTTP_USER_AGENT"];			$this->debugging       = $this->params->get('lagcartusave_plugin_debugging',0); 		}						function plgVmConfirmedOrder($cart, $order) {		    if (JFactory::getApplication()->isAdmin()) {				return NULL;			}			if(!empty($this->debugging)){			    JFactory::getApplication()->enqueueMessage("<strong>plgVmConfirmedOrder</strong>");			}			$cookcartusave = $this->inputCookie->get('cookcartusave', $defaultValue = null);				$this->delCart($cookcartusave);        } 		function plgVmOnAddToCart($cart) {		    		    if (JFactory::getApplication()->isAdmin()) {				return NULL;			}			if(!empty($this->debugging)){			    JFactory::getApplication()->enqueueMessage("<strong>plgVmOnAddToCart</strong>");			} 			$cookcartusave = $this->inputCookie->get('cookcartusave', $defaultValue = null);						//получаем корзину			$cart = VirtueMartCart::getCart(false);			//обновляем данные в сессии из корзины			$cart->setCartIntoSession(true);			 			$this->putCart($cookcartusave);					}		 		function plgVmOnUpdateCart($cart, $force, $html) {		    if (JFactory::getApplication()->isAdmin()) {				return NULL;			}			if(!empty($this->debugging)){			    JFactory::getApplication()->enqueueMessage("<strong>plgVmOnUpdateCart</strong>");			}  			$cookcartusave = $this->inputCookie->get('cookcartusave', $defaultValue = null);						$cartProductsData = $cart->cartProductsData; //получаем массив товаров в корзине						    if(!empty($cartProductsData)){				    		        $this->putCart($cookcartusave);					    	}else{			    $this->delCart($cookcartusave);					}					}		function plgVmOnRemoveFromCart($elem,$prod_id) {		    if (JFactory::getApplication()->isAdmin()) {				return NULL;			}			if(!empty($this->debugging)){			    JFactory::getApplication()->enqueueMessage("<strong>plgVmOnRemoveFromCart</strong>");			}   			$cookcartusave = $this->inputCookie->get('cookcartusave', $defaultValue = null);					    $cart = VirtueMartCart::getCart(false);//получаем корзину						unset($cart->cartProductsData[$prod_id]);//удаляем из корзины товар с $prod_id который удалил клиент			$cart->setCartIntoSession(true);//обновляем данные в сессии из корзины					    $cartProductsData = $cart->cartProductsData; //получаем массив товаров в корзине					    if(!empty($cartProductsData)){				    		        $this->putCart($cookcartusave);					    	}else{			    $this->delCart($cookcartusave);					}		}						public function putCart($cookcartusave){		     			$userip = $this->getIp();			//получаем user id			$user = JFactory::getUser();			$userid = $user->get("id");							//получаем корзину из сессии				$session = JFactory::getSession();			$cartSession = $session->get("vmcart", 0, "vm");			//получаем $cookcartusave если его нет то записываем из ID сессии						if(empty($cookcartusave)){			    $cookcartusave = $this->sessionId;								}			//если есть USERID			if(!empty($userid)){			    //получаем из базы запись для этого $userid								$q = "SELECT * FROM #__lagcartusave WHERE   userid = ".$userid;	    		$this->db->setQuery($q);	    		$result = $this->db->loadObject();				//если запись в бд есть				if($result){				    //Обновляем существующую запись										$q = "update #__lagcartusave set 			        created               = NOW(),			        vmcart                = " . $this->db->Quote($cartSession) . ",			    	userip                = " . $this->db->Quote($userip) . ",   			    	session_id            = " . $this->db->Quote($cookcartusave) . ",			    	userid                = " . $userid . ",   			      	lifecookcart          = " . $this->lifecookcart . ",			    	user_agent_info       = " . $this->db->Quote($this->user_agent_info) . ",   			    	reserve_column        = DATE_SUB(NOW(), INTERVAL ".$this->db->Quote($this->lifecookcart)." DAY)    			    	WHERE userid          = " . $userid;				 	                  	$this->db->setQuery($q);                            		    	$this->db->query();						//обновляем куки в браузере					$this->writeCookie ($cookcartusave);									}else{			        //записи в БД нет с таким USERID					//ищем запись в БД с текущим КУКИ										$q = "SELECT * FROM #__lagcartusave WHERE   session_id = ".$this->db->Quote($cookcartusave);	    		    $this->db->setQuery($q);	    		    $result = $this->db->loadObject();					//есть ли запись в БД с текущим КУКИ					if($result){					    //Обновляем существующую запись						//$cookcartusave = $result->session_id;												$q = "update #__lagcartusave set     			        created               = NOW(),    			        vmcart                = " . $this->db->Quote($cartSession) . ",    			    	userip                = " . $this->db->Quote($userip) . ",       			    	session_id            = " . $this->db->Quote($cookcartusave) . ",    			    	userid                = " . $userid . ",       			      	lifecookcart          = " . $this->lifecookcart . ",    			    	user_agent_info       = " . $this->db->Quote($this->user_agent_info) . ",     			    	reserve_column        = DATE_SUB(NOW(), INTERVAL ".$this->db->Quote($this->lifecookcart)." DAY)      			    	WHERE session_id            = " .$this->db->Quote($cookcartusave);			 	                      	$this->db->setQuery($q);                              		    	$this->db->query();		    				//обновляем куки в браузере	    				$this->writeCookie ($cookcartusave);					}else{					    //В БД нет записи с текущим куки, значит создаем запись в БД					   					   $this->insertDbCart($cookcartusave,$userid);					   //создаем куки в браузере					   $this->writeCookie ($cookcartusave);						}			    }			}else{			    //получаем  запись для текущего КУКИ из БД								$q = "SELECT * FROM #__lagcartusave WHERE   session_id = ".$this->db->Quote($cookcartusave);	    		$this->db->setQuery($q);	    		$result = $this->db->loadObject();								if($result){					    //запись с текущим КУКИ в БД есть				    //Обновляем существующую запись					 				    $q = "update #__lagcartusave set 			        created               = NOW(),			        vmcart                = " . $this->db->Quote($cartSession) . ",			    	userip                = " . $this->db->Quote($userip) . ",   			    	session_id            = " . $this->db->Quote($cookcartusave) . ",			    	   			      	lifecookcart          = " . $this->lifecookcart . ",			    	user_agent_info       = " . $this->db->Quote($this->user_agent_info) . ",   			    	reserve_column        = DATE_SUB(NOW(), INTERVAL ".$this->db->Quote($this->lifecookcart)." DAY)    			    	WHERE session_id      = " . $this->db->Quote($cookcartusave);	                  	$this->db->setQuery($q);                            		    	$this->db->query();						//обновляем куки в браузере					$this->writeCookie ($cookcartusave);					}else{				    //В БД нет записи для текущего КУКИ создаем запись в БД										$this->insertDbCart($cookcartusave,$userid);					//создаем куки в браузере					$this->writeCookie ($cookcartusave);					}			}		}							function insertDbCart($cookcartusave,$userid){		    $userip = $this->getIp();			//получаем user id			$user = JFactory::getUser();			$userid = $user->get("id");							//получаем корзину из сессии				$session = JFactory::getSession();			$cartSession = $session->get("vmcart", 0, "vm");		    $this->db->setQuery("INSERT INTO #__lagcartusave (created,vmcart,userip,session_id,userid,lifecookcart,user_agent_info,reserve_column) values(			NOW(),			" . $this->db->Quote($cartSession) . ", 			" . $this->db->Quote($userip) . ", 			" . $this->db->Quote($cookcartusave) . ",			" . $userid . ", 			" . $this->lifecookcart . ", 			" . $this->db->Quote($this->user_agent_info) .",			DATE_SUB(NOW(), INTERVAL ".$this->db->Quote($this->lifecookcart)." DAY)			)");			   			$this->db->query();				}				function writeCookie ($cookcartusave){		    //записываем в куки сессию корзины    		$expire = time() + 60 * 60 * 24 * $this->lifecookcart;	    		$this->inputCookie->set('cookcartusave', $cookcartusave, $expire, '/');		}						function delCart($cookcartusave){		    if(!empty($this->debugging)){			                JFactory::getApplication()->enqueueMessage('<b>delCart ('.$cookcartusave.')</b>');            }		    //очистим сохраненную корзину и удалим куки					if(empty($cookcartusave)){			    $cookcartusave = $this->sessionId;			}		    			$q="DELETE FROM #__lagcartusave WHERE session_id=" . $this->db->Quote($cookcartusave);			$this->db->setQuery($q);			//Выполним запрос			$this->db->query();										// Remove cookie			$expire = time() - 1;			//setcookie('cookcartusave', '', time() - 3600, '/');            $this->inputCookie->set('cookcartusave', null, $expire, '/');			//return true;        } 				public function getIp(){            if (!empty($_SERVER['HTTP_CLIENT_IP'])) {                 $ip = $_SERVER['HTTP_CLIENT_IP'];            } elseif (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])) {                $ip = $_SERVER['HTTP_X_FORWARDED_FOR'];            } elseif (!empty($_SERVER['REMOTE_ADDR'])) {                $ip = $_SERVER['REMOTE_ADDR'];            } else {                $ip = null;            }            return $ip;        }	}?>